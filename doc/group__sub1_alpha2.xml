<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__sub1_alpha2" kind="group">
    <compoundname>sub1Alpha2</compoundname>
    <title>Lógica</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sub1_alpha2_1ga4e68d436fd02312dbf25a0876e6fcc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogar</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>É realizada quando uma coordenada é colocada no prompt e enter é pressionado. </para>
        </briefdescription>
        <detaileddescription>
<para>Primeiro a função atualiza a casa, ou seja, faz a casa da peça ser PRETA e faz a casa da coordenada inserida ser BRANCA. Depois atualiza a última jogada para ser a coordenada inserida. Após isso, salva a coordenada inserida no histórico de jogadas do jogador que inseriu a coordenada. Em seguida incrementa o número de jogadas. Finalmente, atualiza o jogador atual, ou seja, determina o jogador atual para 1 ou para 2. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>é a coordenada que foi inserida </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="29" column="6" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="6" bodyend="13" declfile="LA1PL2G01/projeto/logica/logica.h" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1gab1160bacb55fe9977b2a60e615c2e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogada_valida</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogada_valida</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Avalia se a coordenada recebida corresponde a um movimento válido. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>é a coordenada que corresponde a um movimento. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>é 1 ou 0 dependendo se a coordenada recebida for válida ou não </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="36" column="5" bodyfile="LA1PL2G01/projeto/logica/logica.c" bodystart="14" bodyend="23" declfile="LA1PL2G01/projeto/logica/logica.h" declline="36" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga33aa2b1fccaee5b1c1707d92f6ddc6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostrar_tabuleiro</definition>
        <argsstring>(ESTADO *e, FILE *file)</argsstring>
        <name>mostrar_tabuleiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Essa função é usada para imprimir o tabuleiro, seja no ecrã ou em um ficheiro para ser salvo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>é o que permite determinar se estamos imprimindo para o ecrã ou para um ficheito. Se for NULL é para o ecrã. Se for um file pointer é para um ficheiro. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="42" column="6" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="15" bodyend="22" declfile="LA1PL2G01/projeto/logica/logica.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1gafb7d37204f937c5a75d647c6537ef22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prompt</definition>
        <argsstring>(ESTADO *e, int num_comandos)</argsstring>
        <name>prompt</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_comandos</declname>
        </param>
        <briefdescription>
<para>Função usada para gerar os argumentos a serem impressos como prompt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_comandos</parametername>
</parameternamelist>
<parameterdescription>
<para>é o número de comandos válidos </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="48" column="6" bodyfile="LA1PL2G01/projeto/logica/logica.c" bodystart="34" bodyend="37" declfile="LA1PL2G01/projeto/logica/logica.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga9a0ae8b2e0ca2ed4b5fdd4145a742791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fim_de_jogo</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>fim_de_jogo</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Avalia os fins de jogos. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 se o jogador 1 venceu; 2 se o jogador 2 venceu; 0 se o jogo ainda não acabou </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="54" column="5" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="24" bodyend="40" declfile="LA1PL2G01/projeto/logica/logica.h" declline="54" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga8a79a457a813dff34cfcdd48ac2c941c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pos</definition>
        <argsstring>(ESTADO *e, int position, int state)</argsstring>
        <name>pos</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Permite aceder jogadas anteriores do jogo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>é o número da jogada desejada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>é 0 se foi chamada após uma nova jogada e 1 se foi chamada após já ter sido chamada e não foi realizada nenhuma jogada no meio </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="61" column="6" bodyfile="LA1PL2G01/projeto/logica/logica.c" bodystart="65" bodyend="87" declfile="LA1PL2G01/projeto/logica/logica.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga893b15b1044151de83eb9b01817dcdc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void movs</definition>
        <argsstring>(ESTADO *e, FILE *file)</argsstring>
        <name>movs</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Lógica para imprimir a lista de jogadas, tanto no ecrã quanto num ficheiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>é o que permite determinar se estamos imprimindo para o ecrã ou para um ficheito. Se for NULL é para o ecrã. Se for um file pointer é para um ficheiro. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="67" column="6" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="42" bodyend="48" declfile="LA1PL2G01/projeto/logica/logica.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1gab39d4dc63e6d2693c1db926f53cba16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int desfazer_ultjogada</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>desfazer_ultjogada</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Desfaz a última jogada <ndash/> função auxiliar para o comando jog. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 se correu bem </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="73" column="5" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="50" bodyend="57" declfile="LA1PL2G01/projeto/logica/logica.h" declline="73" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga85768460d2d874c166cfdfb78c21b5aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int minMax</definition>
        <argsstring>(ESTADO *e, int profundidade)</argsstring>
        <name>minMax</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
<para>Lógica do MinMax, para realizar uma jogada sozinho. </para>
        </briefdescription>
        <detaileddescription>
<para>Prevê até 8 jogadas à frente.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>é a atual profundidade da função, ou seja, quantas vezes a função já foi chamada recursivamente </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>o melhor resultado do galho quando profundidade &gt; 0; uma coordenada em formato de inteiro quando profundidade == 0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="80" column="5" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="59" bodyend="95" declfile="LA1PL2G01/projeto/logica/logica.h" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga636e9e396c3d409d5f71bf3020268d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA randomJog</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>randomJog</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Devolve uma coordenada aleatória dentre as jogadas possíveis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uma coordenada à sorte </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="86" column="12" bodyfile="LA1PL2G01/projeto/logica/logica.c" bodystart="146" bodyend="158" declfile="LA1PL2G01/projeto/logica/logica.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga9dfbc982d23a619e36575d8e7ec8e41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jog</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jog</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Joga na coordenada devolvida pelo minMax. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="91" column="6" bodyfile="LA1PL2G01/bot/logicaBot.c" bodystart="97" bodyend="104" declfile="LA1PL2G01/projeto/logica/logica.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sub1_alpha2_1ga75a3c6feb2f2ec713f96559558b136d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jog2</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jog2</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Joga na coordenada devolvida pelo randomJog. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>é o estado do tabuleiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LA1PL2G01/projeto/logica/logica.h" line="96" column="6" bodyfile="LA1PL2G01/projeto/logica/logica.c" bodystart="161" bodyend="166" declfile="LA1PL2G01/projeto/logica/logica.h" declline="96" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
